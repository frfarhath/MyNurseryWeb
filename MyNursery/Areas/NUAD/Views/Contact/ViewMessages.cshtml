@model IEnumerable<MyNursery.Areas.NUAD.Models.ContactMessage>

@{
    ViewData["Title"] = "View Messages";
}

<!-- [ breadcrumb ] start -->
<div class="page-header">
    <div class="page-block">
        <div class="row align-items-center">
            <div class="col-md-12">
                <div class="page-header-title">
                    <h5 class="m-b-10">Contact Messages</h5>
                </div>
                <ul class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a asp-area="NUAD" asp-controller="Home" asp-action="Dashboard"><i class="feather icon-home"></i></a>
                    </li>
                    <li class="breadcrumb-item"><a href="#">Contact</a></li>
                    <li class="breadcrumb-item"><a href="#">View Messages</a></li>
                </ul>
            </div>
        </div>
    </div>
</div>
<!-- [ breadcrumb ] end -->
<!-- Table -->
<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">All Contact Messages</h5>
                <span class="text-muted">View, search, and manage contact messages submitted from the contact form.</span>
            </div>
            <div class="card-body">
                <!-- 🔽 Search and Filter (correct position) -->
                <div class="row mb-3">
                    <div class="col-md-5">
                        <input type="text" id="searchInput" class="form-control" placeholder="Search by name, email, subject..." onkeyup="filterTable()" />
                    </div>
                    <div class="col-md-4">
                        <select id="subjectFilter" class="form-control" onchange="filterTable()">
                            <option value="">-- Filter by Subject --</option>
                            @foreach (var subject in Model.Select(m => m.Subject).Distinct().OrderBy(s => s))
                            {
                                <option value="@subject">@subject</option>
                            }
                        </select>
                    </div>
                </div>

                <div class="table-responsive">
                    <table class="table table-hover" id="messagesTable">
                        <thead class="thead-light">
                            <tr>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Subject</th>
                                <th>Message</th>
                                <th>Submitted At</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var msg in Model)
                            {
                                <tr data-id="@msg.Id">
                                    <td>@msg.Name</td>
                                    <td>@msg.Email</td>
                                    <td>@msg.Subject</td>
                                    <td>@(msg.Message.Length > 50 ? msg.Message.Substring(0, 50) + "..." : msg.Message)</td>
                                    <td>@msg.SubmittedAt.ToString("yyyy-MM-dd HH:mm")</td>
                                    <td>
                                        <button class="btn btn-info btn-sm" onclick="viewMessage(@msg.Id)">
                                            <i class="feather icon-eye"></i> View
                                        </button>
                                        <form asp-action="DeleteMessage" asp-route-id="@msg.Id" method="post" class="d-inline delete-form">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-danger btn-sm">
                                                <i class="feather icon-trash-2"></i> Delete
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                @if (!Model.Any())
                {
                    <div class="alert alert-info mt-4">
                        No contact messages found.
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<!-- [ Main Content ] end -->
<!-- View Message Modal -->
<div class="modal fade" id="messageViewModal" tabindex="-1" role="dialog" aria-labelledby="messageViewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="messageViewModalLabel">Contact Message Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="$('#messageViewModal').modal('hide')">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p><strong>Name:</strong> <span id="msgName"></span></p>
                <p><strong>Email:</strong> <span id="msgEmail"></span></p>
                <p><strong>Subject:</strong> <span id="msgSubject"></span></p>
                <p><strong>Message:</strong></p>
                <p id="msgContent"></p>
                <p><strong>Submitted At:</strong> <span id="msgSubmittedAt"></span></p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function filterTable() {
            const input = document.getElementById("searchInput").value.toLowerCase();
            const subjectFilter = document.getElementById("subjectFilter").value.toLowerCase();
            const table = document.getElementById("messagesTable");
            const trs = table.tBodies[0].getElementsByTagName("tr");

            for (let i = 0; i < trs.length; i++) {
                const tds = trs[i].getElementsByTagName("td");
                const name = tds[0].textContent.toLowerCase();
                const email = tds[1].textContent.toLowerCase();
                const subject = tds[2].textContent.toLowerCase();

                const matchesSearch = name.includes(input) || email.includes(input) || subject.includes(input);
                const matchesSubject = subjectFilter === "" || subject === subjectFilter;

                trs[i].style.display = (matchesSearch && matchesSubject) ? "" : "none";
            }
        }

        async function viewMessage(id) {
            try {
                const res = await fetch(`/NUAD/Contact/GetMessageDetails/${id}`);
                if (!res.ok) throw new Error("Message details not found.");
                const data = await res.json();

                document.getElementById("msgName").textContent = data.name || "";
                document.getElementById("msgEmail").textContent = data.email || "";
                document.getElementById("msgSubject").textContent = data.subject || "";
                document.getElementById("msgContent").textContent = data.message || "";
                document.getElementById("msgSubmittedAt").textContent = data.submittedAt || "";

                $('#messageViewModal').modal('show');
            } catch (err) {
                alert(err.message);
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            const deleteForms = document.querySelectorAll('.delete-form');

            deleteForms.forEach(form => {
                form.addEventListener('submit', async function (e) {
                    e.preventDefault();

                    if (!confirm("Are you sure you want to delete this message?")) return;

                    const formData = new FormData(form);
                    const token = formData.get("__RequestVerificationToken");

                    try {
                        const response = await fetch(form.action, {
                            method: 'POST',
                            headers: {
                                'RequestVerificationToken': token,
                                'Accept': 'application/json'
                            },
                            body: formData
                        });

                        const result = await response.json();

                        if (result.success) {
                            alert(result.message);
                            form.closest('tr').remove();
                        } else {
                            alert(result.message || "Failed to delete message.");
                        }
                    } catch {
                        alert("Error deleting message.");
                    }
                });
            });
        });
    </script>
}
