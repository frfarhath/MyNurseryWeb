@model IEnumerable<MyNursery.Areas.NUAD.Models.BlogPost>
@using System.Linq

@{
    ViewData["Title"] = "Manage Blogs";
}

<!-- [ breadcrumb ] start -->
<div class="page-header">
    <div class="page-block">
        <div class="row align-items-center">
            <div class="col-md-12">
                <div class="page-header-title">
                    <h5 class="m-b-10">Manage Blogs</h5>
                </div>
                <ul class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a asp-area="NUAD" asp-controller="Home" asp-action="Dashboard"><i class="feather icon-home"></i></a>
                    </li>
                    <li class="breadcrumb-item"><a href="#">Blogs</a></li>
                    <li class="breadcrumb-item"><a href="#">Manage Blogs</a></li>
                </ul>
            </div>
        </div>
    </div>
</div>
<!-- [ breadcrumb ] end -->
<!-- [ Main Content ] start -->
<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">All Blog Posts</h5>
                <span class="text-muted">Search, filter, and manage blog entries.</span>
            </div>
            <div class="card-body">

                <div class="row mb-3">
                    <div class="col-md-6">
                        <input type="text" id="searchInput" class="form-control" placeholder="Search by title..." onkeyup="filterTable()" />
                    </div>
                    <div class="col-md-4">
                        <select id="categoryFilter" class="form-control" onchange="filterTable()">
                            <option value="">-- Filter by Category --</option>
                            <option value="Education">Education</option>
                            <option value="Events">Events</option>
                            <option value="Tips">Tips</option>
                        </select>
                    </div>
                </div>

                <div class="table-responsive">
                    <table class="table table-hover" id="blogsTable">
                        <thead class="thead-light">
                            <tr>
                                <th>Title</th>
                                <th>Category</th>
                                <th>Publish Date</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var blog in Model)
                            {
                                <tr>
                                    <td>@blog.Title</td>
                                    <td>@blog.Category</td>
                                    <td>@blog.PublishDate?.ToString("yyyy-MM-dd")</td>
                                    <td>
                                        <form asp-action="UpdateStatus" method="post" class="d-flex align-items-center">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="Id" value="@blog.Id" />
                                            <select name="Status" class="form-control form-control-sm mr-2">
                                                <option value="Published" selected="@(blog.Status == "Published")">Published</option>
                                                <option value="Draft" selected="@(blog.Status == "Draft")">Draft</option>
                                                <option value="Archived" selected="@(blog.Status == "Archived")">Archived</option>
                                            </select>
                                            <button type="submit" class="btn btn-sm btn-secondary">
                                                <i class="feather icon-refresh-cw"></i> Update
                                            </button>
                                        </form>
                                    </td>
                                    <td>
                                        <button class="btn btn-info btn-sm" onclick="viewBlog(@blog.Id)">
                                            <i class="feather icon-eye"></i> View
                                        </button>
                                        <a asp-action="EditBlog" asp-route-id="@blog.Id" class="btn btn-warning btn-sm">
                                            <i class="feather icon-edit"></i> Edit
                                        </a>
                                        <form asp-action="DeleteBlog"
                                              asp-route-id="@blog.Id"
                                              method="post"
                                              class="delete-form d-inline">
                                            @Html.AntiForgeryToken()
                                            <button type="button" class="btn btn-danger btn-sm delete-btn">
                                                <i class="feather icon-trash-2"></i> Delete
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                @if (!Model?.Any() ?? true)
                {
                    <div class="alert alert-info mt-4">
                        No blog posts found.
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<!-- [ Main Content ] end -->
<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="border:none; background:none; font-size: 1.5rem;">
                    &times;
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this blog post?</p>
                <div class="alert alert-danger d-none" id="deleteErrorMsg"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button id="confirmDeleteBtn" type="button" class="btn btn-danger">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- View Blog Modal -->
<div class="modal fade" id="blogViewModal" tabindex="-1" role="dialog" aria-labelledby="blogViewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="blogViewModalLabel">Blog Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" style="border:none; background:none; font-size: 1.5rem;">
                    &times;
                </button>
            </div>
            <div class="modal-body">
                <h4 id="blogTitle"></h4>
                <p><strong>Category:</strong> <span id="blogCategory"></span></p>
                <p><strong>Status:</strong> <span id="blogStatus"></span></p>
                <p><strong>Created on:</strong> <span id="blogCreatedAt"></span></p>
                <p><strong>Published on:</strong> <span id="blogDate"></span></p>

                <hr />

                <div id="blogContent"></div>

                <hr />

                <div id="blogImages" class="mt-3">
                    <div id="coverImageContainer" class="mb-3">
                        <p><strong>Cover Image:</strong></p>
                        <img id="coverImage" src="" alt="Cover Image" class="img-fluid" style="max-height:200px;" />
                    </div>

                    <div id="optionalImage1Container" class="mb-2">
                        <p><strong>Optional Image 1:</strong></p>
                        <img id="optionalImage1" src="" alt="Optional Image 1" class="img-fluid" style="max-height:150px;" />
                    </div>

                    <div id="optionalImage2Container" class="mb-2">
                        <p><strong>Optional Image 2:</strong></p>
                        <img id="optionalImage2" src="" alt="Optional Image 2" class="img-fluid" style="max-height:150px;" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function filterTable() {
            const input = document.getElementById("searchInput").value.toLowerCase();
            const categoryFilter = document.getElementById("categoryFilter").value.toLowerCase();
            const table = document.getElementById("blogsTable");
            const trs = table.tBodies[0].getElementsByTagName("tr");

            for (let i = 0; i < trs.length; i++) {
                let title = trs[i].getElementsByTagName("td")[0].textContent.toLowerCase();
                let category = trs[i].getElementsByTagName("td")[1].textContent.toLowerCase();

                const matchesTitle = title.includes(input);
                const matchesCategory = categoryFilter === "" || category === categoryFilter;

                trs[i].style.display = (matchesTitle && matchesCategory) ? "" : "none";
            }
        }

        function viewBlog(id) {
            fetch(`/NUAD/Blogs/GetBlogDetails/${id}`)
                .then(res => res.json())
                .then(data => {
                    if (!data) {
                        alert("Blog details not found.");
                        return;
                    }

                    document.getElementById("blogTitle").textContent = data.title || '';
                    document.getElementById("blogCategory").textContent = data.category || '';
                    document.getElementById("blogStatus").textContent = data.status || '';
                    document.getElementById("blogCreatedAt").textContent = data.createdAt || '';
                    document.getElementById("blogDate").textContent = data.publishDate || '';
                    document.getElementById("blogContent").innerHTML = data.content || '';

                    function setImage(containerId, imageId, url) {
                        const container = document.getElementById(containerId);
                        const img = document.getElementById(imageId);
                        if (url) {
                            container.style.display = 'block';
                            img.src = url;
                        } else {
                            container.style.display = 'none';
                            img.src = '';
                        }
                    }

                    setImage('coverImageContainer', 'coverImage', data.coverImage);
                    setImage('optionalImage1Container', 'optionalImage1', data.image1);
                    setImage('optionalImage2Container', 'optionalImage2', data.image2);

                    $('#blogViewModal').modal('show');
                })
                .catch(() => alert('Error loading blog details.'));
        }

        document.addEventListener('DOMContentLoaded', () => {
            let formToDelete = null;

            const deleteButtons = document.querySelectorAll('.delete-btn');
            const deleteConfirmModal = $('#deleteConfirmModal');
            const deleteErrorMsg = document.getElementById('deleteErrorMsg');

            deleteButtons.forEach(button => {
                button.addEventListener('click', function () {
                    formToDelete = this.closest('form');
                    deleteErrorMsg.classList.add('d-none');
                    deleteErrorMsg.textContent = '';
                    deleteConfirmModal.modal('show');
                });
            });

            document.getElementById('confirmDeleteBtn').addEventListener('click', async function () {
                if (!formToDelete) return;

                const formData = new FormData(formToDelete);
                const token = formData.get("__RequestVerificationToken");

                try {
                    const response = await fetch(formToDelete.action, {
                        method: 'POST',
                        headers: {
                            'RequestVerificationToken': token,
                            'Accept': 'application/json'
                        },
                        body: formData
                    });

                    const result = await response.json();

                    if (result.success) {
                        // Remove the blog row
                        formToDelete.closest('tr').remove();
                        deleteConfirmModal.modal('hide');
                    } else {
                        deleteErrorMsg.textContent = result.message || "Failed to delete blog.";
                        deleteErrorMsg.classList.remove('d-none');
                    }
                } catch (error) {
                    deleteErrorMsg.textContent = "An error occurred. Please try again.";
                    deleteErrorMsg.classList.remove('d-none');
                }
            });
        });
    </script>
}
